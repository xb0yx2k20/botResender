#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import asyncio
import logging
from telethon import TelegramClient, events

API_ID = 25635259
API_HASH = "67bec902e3505eb233a268dde834d554"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏: {–∏—Å—Ö–æ–¥–Ω—ã–π_—á–∞—Ç: [—Å–ø–∏—Å–æ–∫_—Ü–µ–ª–µ–≤—ã—Ö_—á–∞—Ç–æ–≤]}
FORWARD_CONFIG = {
    # –ß–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ WB –ü–í–ó -> –ì—Ä—É–ø–ø–∞ "–ù–∏–∫–∏—Ç–∞" (—Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º)
    -1001191038500: {
        'targets': [
            # –¢–µ—Å—Ç—ã –ë–æ—Ç–∞
            -4930610312,
            
            # # –ù–∏–∫–∏—Ç–∞
            # -1002205402814, 
            # -1002618488886, 
            # -1003149425740, 
            # -1002968528544, 
            # -1002597039230, 
            
            # # –ï–ª–µ–Ω–∞
            # -1002324418495,
            # -1002415883693,
            # -1002473600494,
            # -1002493722860,
            # -1002266126897,
            
            # # –ê–Ω–¥—Ä–µ–π
            # -1002294684549,
            # -1002324418495,
            # -1002282191777,
            # -1002300812487,
            # -1002350563218,
            # -1002497371035,
            
            # # –ù–∞—Å—Ç—è
            # -1002407856400,
            # -1002358346270,
            # -1002706496818,
            # -1002292190065,
            # -4890126309,
            # -1002477977258,

            # # –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
            # -1002809230924

            


        ],
        'filter_type': 'keyword',
        'keywords': ['–ö–æ–º–∞–Ω–¥–∞ WB –ü–í–ó'],
        'description': '–ß–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ WB –ü–í–ó -> –ì—Ä—É–ø–ø–∞ "–ù–∏–∫–∏—Ç–∞" (—Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º)'
    },
    
    # Ozon -> –¢–µ—Å—Ç—ã –ë–æ—Ç–∞ (–ø–µ—Ä–µ—Å—ã–ª–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
    -1001748528023: {
        'targets': [
            -4930610312,

            # -1002516895147,
            # -1002672906777,
            # -4936691149,
            # -1003197373336,
            # -1002582421399,
            # -1002881100657,
            # -1003141777887,
            # -1002891646032,
            # -1002914741018,
            # -1002628279539,
            # -1002809230924,
            # -1002535518423,
            # -1002424637483,
            # -1003194219395,
            # -1002629256846,
            # -4861152542,
            # -1003060038107,
            # -1003086940888,
            # -1002724285922,
            # -1002610317569,
            # -1002968528544,
            # -4612394646,
            # -4701220110,
            # -1003073231886

            
            
            ],
        'filter_type': 'all',
        'description': '–ò—Å—Ö–æ–¥–Ω—ã–π —á–∞—Ç -> –¢–µ—Å—Ç—ã –ë–æ—Ç–∞ (–≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è)'
    }
}

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

# –£–º–µ–Ω—å—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è Telethon –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
logging.getLogger('telethon').setLevel(logging.WARNING)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º —Å–µ—Å—Å–∏–∏
client = TelegramClient('unified_bot_session', API_ID, API_HASH)

async def forward_messages_with_keyword(source_chat_id, target_chat_ids, keywords, limit=2000):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º (–≤–∫–ª—é—á–∞—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã)"""
    try:
        print(f"üîç –ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –≤ —á–∞—Ç–µ {source_chat_id}...")

        chat = await client.get_entity(source_chat_id)
        print(f"üì° –ß–∞—Ç: {getattr(chat, 'title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")

        matching_messages = []

        # –û–±—Ö–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º
        async for message in client.iter_messages(source_chat_id, limit=limit):
            if not message.message:
                continue

            text_lower = message.message.lower()
            for keyword in keywords:
                if keyword.lower() in text_lower:
                    matching_messages.append(message)
                    print(f"üéØ –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å '{keyword}': ID {message.id}")
                    break
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è flood wait (—Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)
            if len(matching_messages) % 10 == 0:
                await asyncio.sleep(0.05)

        if not matching_messages:
            print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–π —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            return

        # –ë–µ—Ä—ë–º —Å–∞–º–æ–µ –Ω–æ–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        last_matching_message = matching_messages[0]
        print(f"üì® –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ID {last_matching_message.id}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –ª–∏ —ç—Ç–æ
        messages_to_forward = []

        if last_matching_message.grouped_id:
            gid = last_matching_message.grouped_id
            print(f"üñº –≠—Ç–æ —á–∞—Å—Ç—å –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã (grouped_id={gid}) ‚Äî –∏—â—É –≤—Å–µ —á–∞—Å—Ç–∏...")

            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–º –∂–µ grouped_id
            all_grouped_messages = []
            async for msg in client.iter_messages(source_chat_id, limit=limit):
                if msg.grouped_id == gid:
                    all_grouped_messages.append(msg)
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è flood wait (—Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π)
                if len(all_grouped_messages) % 5 == 0:
                    await asyncio.sleep(0.03)

            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ (–æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)
            all_grouped_messages.sort(key=lambda x: x.id)
            messages_to_forward = all_grouped_messages
            print(f"üì∏ –°–æ–±—Ä–∞–Ω–æ —á–∞—Å—Ç–µ–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã: {len(messages_to_forward)}")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            for i, msg in enumerate(messages_to_forward):
                print(f"   {i+1}. ID {msg.id}, –¥–∞—Ç–∞: {msg.date}")
        else:
            messages_to_forward = [last_matching_message]
            print("‚úâÔ∏è –≠—Ç–æ –æ–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤–æ –≤—Å–µ —Ü–µ–ª–µ–≤—ã–µ —á–∞—Ç—ã
        success_count = 0
        for target_chat_id in target_chat_ids:
            try:
                await client.forward_messages(target_chat_id, messages_to_forward)
                print(f"‚úÖ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ {len(messages_to_forward)} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ {target_chat_id}")
                success_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ {target_chat_id}: {e}")

        print(f"üéâ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {success_count} —á–∞—Ç–æ–≤.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º: {e}")
async def forward_all_messages(source_chat_id, target_chat_ids, limit=50):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞"""
    try:
        print(f"üîç –ü–µ—Ä–µ—Å—ã–ª–∞—é –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ {source_chat_id}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        chat = await client.get_entity(source_chat_id)
        print(f"üì° –ß–∞—Ç: {getattr(chat, 'title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        last_message = None
        async for message in client.iter_messages(source_chat_id, limit=1):
            last_message = message
            break
        
        if not last_message:
            print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        print(f"üì® –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ID {last_message.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        sender = await last_message.get_sender()
        sender_name = getattr(sender, "first_name", "") or getattr(sender, "title", "–ë–µ–∑ –∏–º–µ–Ω–∏")
        text = last_message.text or "<–º–µ–¥–∏–∞>"
        
        print(f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_name}")
        print(f"üìù –¢–µ–∫—Å—Ç: {text[:100]}...")
        
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Å–µ —Ü–µ–ª–µ–≤—ã–µ —á–∞—Ç—ã
        success_count = 0
        for target_chat_id in target_chat_ids:
            try:
                await client.forward_messages(target_chat_id, last_message)
                print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {target_chat_id}")
                success_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ {target_chat_id}: {e}")
        
        print(f"\nüéâ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {success_count} —á–∞—Ç–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

@client.on(events.NewMessage)
async def handle_new_message(event):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤"""
    try:
        source_chat_id = event.chat_id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        if source_chat_id not in FORWARD_CONFIG:
            return
        
        config = FORWARD_CONFIG[source_chat_id]
        target_chat_ids = config['targets']
        filter_type = config['filter_type']
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        sender = await event.get_sender()
        sender_name = getattr(sender, "first_name", "") or getattr(sender, "title", "–ë–µ–∑ –∏–º–µ–Ω–∏")
        text = event.message.text or ""
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
        should_forward = False
        
        if filter_type == 'all':
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            should_forward = True
            print(f"\nüì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ {source_chat_id}")
            
        elif filter_type == 'keyword':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            keywords = config['keywords']
            text_lower = text.lower()
            
            for keyword in keywords:
                if keyword.lower() in text_lower:
                    should_forward = True
                    print(f"\nüéØ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º '{keyword}' –∏–∑ {source_chat_id}")
                    break
            
            if not should_forward:
                print(f"üéØ –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                print(f"üìù –¢–µ–∫—Å—Ç: {text[:50]}...")
                return
        
        if should_forward:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å
            messages_to_forward = []
            
            if event.message.grouped_id:
                # –≠—Ç–æ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ - —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —á–∞—Å—Ç–∏
                gid = event.message.grouped_id
                print(f"üñº –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ (grouped_id={gid}) ‚Äî —Å–æ–±–∏—Ä–∞—é –≤—Å–µ —á–∞—Å—Ç–∏...")
                
                # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–º –∂–µ grouped_id
                all_grouped_messages = []
                async for msg in client.iter_messages(source_chat_id, limit=1000):
                    if msg.grouped_id == gid:
                        all_grouped_messages.append(msg)
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è flood wait (—Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π)
                    if len(all_grouped_messages) % 5 == 0:
                        await asyncio.sleep(0.03)
                
                # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ (–æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)
                all_grouped_messages.sort(key=lambda x: x.id)
                messages_to_forward = all_grouped_messages
                print(f"üì∏ –°–æ–±—Ä–∞–Ω–æ —á–∞—Å—Ç–µ–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã: {len(messages_to_forward)}")
                
                # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                for i, msg in enumerate(messages_to_forward):
                    print(f"   {i+1}. ID {msg.id}, –¥–∞—Ç–∞: {msg.date}")
            else:
                # –û–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                messages_to_forward = [event.message]
                print("‚úâÔ∏è –û–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤–æ –≤—Å–µ —Ü–µ–ª–µ–≤—ã–µ —á–∞—Ç—ã
            success_count = 0
            for target_chat_id in target_chat_ids:
                try:
                    await client.forward_messages(target_chat_id, messages_to_forward)
                    print(f"‚úÖ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ {len(messages_to_forward)} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ {target_chat_id}!")
                    success_count += 1
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ {target_chat_id}: {e}")
            
            print(f"üë§ –û—Ç: {sender_name}")
            print(f"üí¨ –¢–µ–∫—Å—Ç: {text}")
            print(f"üì§ –í —á–∞—Ç—ã: {target_chat_ids}")
            print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config['description']}")
            print(f"üéâ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {success_count} —á–∞—Ç–æ–≤")
            print("-" * 50)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ (–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞)...")
    print("üì± –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79123456789")
    print("üîê –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS")
    print("üîë –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print()
    
    try:
        await client.start()
        print("‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        print("\nüìã –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ—Å—ã–ª–∫–∏:")
        for source, config in FORWARD_CONFIG.items():
            print(f"üì° {source} -> {config['targets']}")
            print(f"   –¢–∏–ø: {config['filter_type']}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {config['description']}")
            if config['filter_type'] == 'keyword':
                print(f"   –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(config['keywords'])}")
            print()
        
        print("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
        print("1. –ü–µ—Ä–µ—Å–ª–∞—Ç—å –ü–û–°–õ–ï–î–ù–ò–ï —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)")
        print("2. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ä–µ–∂–∏–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
        
        try:
            choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2): ").strip()
            
            if choice == "1":
                print("\nüîÑ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –≤—Å–µ—Ö —á–∞—Ç–æ–≤...")
                
                for source_chat_id, config in FORWARD_CONFIG.items():
                    target_chat_ids = config['targets']
                    filter_type = config['filter_type']
                    
                    print(f"\nüì° –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —á–∞—Ç {source_chat_id}...")
                    
                    if filter_type == 'keyword':
                        await forward_messages_with_keyword(
                            source_chat_id, 
                            target_chat_ids, 
                            config['keywords']
                        )
                    elif filter_type == 'all':
                        await forward_all_messages(source_chat_id, target_chat_ids)
                
                print("\n‚úÖ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
                print("üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
                print("‚è≥ –ñ–¥—É –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
                await client.run_until_disconnected()
            else:
                print("üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
                print("‚è≥ –ñ–¥—É –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
                await client.run_until_disconnected()
                
        except KeyboardInterrupt:
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ Ctrl+C")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: {e}")
            print("üîÑ –ó–∞–ø—É—Å–∫–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
            await client.run_until_disconnected()
            
    except KeyboardInterrupt:
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ Ctrl+C")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await client.disconnect()
        print("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    asyncio.run(main())